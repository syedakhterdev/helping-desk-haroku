{"version":3,"sources":["utils/userdata.js","components/Landingpage.js","services/httpService.js","services/dataService.js","components/organization.js","components/manage.js","components/standard.js","components/user.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["localStorage","window","setToken","token","setItem","JSON","stringify","getToken","parse","getItem","setUserProfile","userProfile","Landing","react_default","a","createElement","style","width","margin","lib","className","col","Component","httpService","get","axios","post","put","delete","baseUrl","headers","attachHeader","Content-Type","Authorization","concat","login","_ref","email","password","console","log","fetch","method","Accept","body","Organization","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","name","description","handleOpenDialog","bind","assertThisInitialized","handleCloseDialog","getOrganization","setState","openDialog","_this2","http","then","res","_this3","organization","dataService","organization_name","organization_description","id","_this4","message","e","defineProperty","target","value","_this5","react_router_dom","to","color","textDecoration","onClick","open","action","type","placeholder","required","onChange","handleChange","handleSubmit","class","map","index","key","deleteOrganization","organization_id","Manage","Standard","allOrganization","allUser","getTicket","ticket","ticket_title","ticket_description","User","user_name","role","getUsers","getAllOrganization","_ref2","user","user_email","user_passsword","user_role","Number","_this6","padding","defaultValue","org","deleteUser","user_id","Main","react_router","history","exact","path","component","LandingPage","manage","standard","App","emailChangeHandler","event","passwordChangeHandler","loginHandler","preventDefault","response","json","userRole","push","errorMessage","handleLogOut","removeItem","title","scroll","colored","raised","ripple","onSubmit","label","main","Boolean","location","hostname","match","createBrowserHistory","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8210a209.chunk.js","sourcesContent":["const localStorage = window.localStorage;\r\nconst tokenKey = \"token\";\r\nconst userProfileKey = \"userProfile\";\r\nconst setToken = token => {\r\n  localStorage.setItem(tokenKey, JSON.stringify(token));\r\n};\r\nconst getToken = () => {\r\n  return JSON.parse(localStorage.getItem(tokenKey));\r\n};\r\nconst removeItems = () => {\r\n  localStorage.removeItem(tokenKey);\r\n  localStorage.removeItem(userProfileKey);\r\n};\r\nconst setUserProfile = userProfile => {\r\n  localStorage.setItem(userProfileKey, JSON.stringify(userProfile));\r\n};\r\nconst getUserProfile = () => {\r\n  return JSON.parse(localStorage.getItem(userProfileKey));\r\n};\r\nexport { setToken, getToken, setUserProfile, getUserProfile, removeItems };\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Cell } from \"react-mdl\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Grid className=\"header-top\">\r\n          <Cell col={12}>\r\n            <h1>Helping Desk</h1>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete\r\n};\r\n","import http from \"./httpService\";\r\nimport { getToken } from \"../utils/userdata\";\r\nconst baseUrl = \"http://localhost:3000\";\r\nconst isProd = url => {\r\n  if (process.env.NODE_ENV === \"production\") return url;\r\n  else return `${baseUrl}url`;\r\n};\r\n\r\nlet headers = {};\r\nconst attachHeader = () => {\r\n  headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: `bearer ${getToken() && getToken()[\"token\"]}`\r\n  };\r\n};\r\n\r\nexport const createUser = user => {\r\n  attachHeader();\r\n  console.log(headers);\r\n  return http.post(`${baseUrl}/users`, user, { headers: headers });\r\n};\r\n\r\nexport const login = ({ email, password }) => {\r\n  attachHeader();\r\n  console.log(\"email:\", email);\r\n  return fetch(`${baseUrl}/login`, {\r\n    method: \"post\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    //make sure to serialize your JSON body\r\n    body: JSON.stringify({\r\n      email,\r\n      password\r\n    })\r\n  });\r\n};\r\nexport const getUsers = () => {\r\n  attachHeader();\r\n  return http.get(`${baseUrl}/users`, { headers: headers });\r\n};\r\nexport const getOrganization = () => {\r\n  attachHeader();\r\n  return http.get(`${baseUrl}/organizations`, { headers: headers });\r\n};\r\n// deleteUser\r\nexport const deleteUser = ({ id }) => {\r\n  attachHeader();\r\n  return http.delete(`${baseUrl}/users/` + id, { headers: headers });\r\n};\r\n\r\n// create Organization\r\nexport const createOrganization = organization => {\r\n  attachHeader();\r\n  return http.post(`${baseUrl}/organizations`, organization, {\r\n    headers: headers\r\n  });\r\n};\r\n// getAllOrganization\r\nexport const getAllOrganization = () => {\r\n  attachHeader();\r\n  return http.get(`${baseUrl}/organizations`, { headers: headers });\r\n};\r\n\r\n// deleteOrganization\r\nexport const deleteOrganization = id => {\r\n  attachHeader();\r\n  return http.delete(`${baseUrl}/organizations/` + id, { headers: headers });\r\n};\r\n\r\n//getAllTicket\r\nexport const getAllTicket = () => {\r\n  attachHeader();\r\n  return http.get(`${baseUrl}/tickets`, { headers: headers });\r\n};\r\n\r\n// createTicket\r\nexport const createTicket = ticket => {\r\n  attachHeader();\r\n  return http.post(`${baseUrl}/tickets`, ticket, { headers: headers });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent } from \"react-mdl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as dataService from \"../services/dataService\";\r\n\r\nclass Organization extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      name: \"\",\r\n      description: \"\"\r\n    };\r\n    this.handleOpenDialog = this.handleOpenDialog.bind(this);\r\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getOrganization();\r\n  }\r\n  handleOpenDialog() {\r\n    this.setState({\r\n      openDialog: true\r\n    });\r\n  }\r\n\r\n  handleCloseDialog() {\r\n    this.setState({\r\n      openDialog: false\r\n    });\r\n  }\r\n  getOrganization() {\r\n    dataService.getAllOrganization().then(res => {\r\n      this.setState({ data: res.data });\r\n    });\r\n  }\r\n  handleSubmit() {\r\n    const organization = {\r\n      organization_name: this.state.name,\r\n      organization_description: this.state.description\r\n    };\r\n    dataService.createOrganization(organization).then(res => {\r\n      if (res) {\r\n        console.log(res);\r\n        this.getOrganization();\r\n        this.setState({ openDialog: false });\r\n      }\r\n    });\r\n  }\r\n  deleteOrganization(id) {\r\n    dataService.deleteOrganization(id).then(res => {\r\n      if (res) {\r\n        this.getOrganization();\r\n        this.setState({\r\n          message: \"organization is delete successfully\"\r\n        });\r\n      }\r\n      console.log(\"deleteOrganization\", res);\r\n    });\r\n  }\r\n  handleChange(name, e) {\r\n    this.setState({ [name]: e.target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-2 offset-sm-8\">\r\n            <button className=\"btn btn-success btn-block\">\r\n              <Link\r\n                to=\"/user\"\r\n                style={{ color: \"white\", textDecoration: \"none\" }}\r\n              >\r\n                Manage Users\r\n              </Link>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-success btn-block\"\r\n              onClick={this.handleOpenDialog}\r\n            >\r\n              Add\r\n            </button>\r\n            <Dialog open={this.state.openDialog}>\r\n              <DialogContent>\r\n                <form action=\"\" method=\"post\">\r\n                  <div className=\"form-group\">\r\n                    <label>Organization Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Organization Name\"\r\n                      required=\"true\"\r\n                      onChange={e => this.handleChange(\"name\", e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Description\"\r\n                      required=\"true\"\r\n                      onChange={e => this.handleChange(\"description\", e)}\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={() => this.handleSubmit()}>submit</Button>\r\n                <Button type=\"button\" onClick={this.handleCloseDialog}>\r\n                  Cancel\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-sm-8 offset-sm-2\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Organization Name</th>\r\n                  <th>Users</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.data.map((data, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{data.organization_name}</td>\r\n                      <td>{data.organization_description}</td>\r\n                      <td>\r\n                        <button\r\n                          onClick={() =>\r\n                            this.deleteOrganization(data.organization_id)\r\n                          }\r\n                        >\r\n                          {\" \"}\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Organization;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Manage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 offset-sm-4 mt-5\">\r\n            <button className=\"btn btn-secondary\">\r\n              {\" \"}\r\n              <Link to=\"/user\" className=\"btn-manage-txt\">\r\n                Manage Users\r\n              </Link>\r\n            </button>\r\n            <button className=\"btn btn-secondary ml-2\">\r\n              <Link to=\"/organization\" className=\"btn-manage-txt\">\r\n                Manage Organizations{\" \"}\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Manage;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent } from \"react-mdl\";\r\nimport * as dataService from \"../services/dataService\";\r\n\r\nclass Standard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      name: \"\",\r\n      description: \"\",\r\n      allOrganization: [],\r\n      allUser: []\r\n    };\r\n    this.handleOpenDialog = this.handleOpenDialog.bind(this);\r\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\r\n  }\r\n\r\n  handleOpenDialog() {\r\n    this.setState({\r\n      openDialog: true\r\n    });\r\n  }\r\n\r\n  handleCloseDialog() {\r\n    this.setState({\r\n      openDialog: false\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTicket();\r\n  }\r\n  handleSubmit() {\r\n    const ticket = {\r\n      ticket_title: this.state.name,\r\n      ticket_description: this.state.description\r\n    };\r\n\r\n    dataService.createTicket(ticket).then(res => {\r\n      this.getTicket();\r\n      this.setState({ openDialog: false });\r\n    });\r\n  }\r\n  getTicket() {\r\n    dataService.getAllTicket().then(res => {\r\n      console.log(\"response ticket: \", res.data);\r\n      this.setState({ data: res.data });\r\n    });\r\n  }\r\n  handleChange(name, e) {\r\n    this.setState({ [name]: e.target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-2 offset-sm-8\">\r\n            <button\r\n              className=\"btn btn-success btn-block\"\r\n              onClick={this.handleOpenDialog}\r\n            >\r\n              Add Ticket\r\n            </button>\r\n            <Dialog open={this.state.openDialog}>\r\n              <DialogContent>\r\n                <form action=\"\" method=\"post\">\r\n                  <div className=\"form-group\">\r\n                    <label> Ticket Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Ticket Name\"\r\n                      required=\"true\"\r\n                      onChange={e => this.handleChange(\"name\", e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      required=\"true\"\r\n                      onChange={e => this.handleChange(\"description\", e)}\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button type=\"button\" onClick={() => this.handleSubmit()}>\r\n                  submit\r\n                </Button>\r\n                <Button type=\"button\" onClick={this.handleCloseDialog}>\r\n                  Cancel\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-sm-8 offset-sm-2\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Ticket Name</th>\r\n                  <th>Ticket Description</th>\r\n                  <th>Posted By</th>\r\n                  <th>Organization Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.data.map((data, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{data.ticket_title}</td>\r\n                      <td>{data.ticket_description}</td>\r\n                      <td>{data.User.user_name}</td>\r\n                      <td>{data.Organization.organization_name}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Standard;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent } from \"react-mdl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as dataService from \"../services/dataService\";\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      role: \"\",\r\n      organization: null,\r\n      message: \"\",\r\n      allOrganization: []\r\n    };\r\n    this.handleOpenDialog = this.handleOpenDialog.bind(this);\r\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\r\n  }\r\n\r\n  handleOpenDialog() {\r\n    this.setState({\r\n      openDialog: true\r\n    });\r\n  }\r\n\r\n  handleCloseDialog() {\r\n    this.setState({\r\n      openDialog: false\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers();\r\n    this.getAllOrganization();\r\n  }\r\n\r\n  getUsers() {\r\n    dataService.getUsers().then(res => {\r\n      this.setState({ data: res.data });\r\n    });\r\n  }\r\n  getAllOrganization() {\r\n    dataService.getOrganization().then(res => {\r\n      this.setState({ allOrganization: res.data });\r\n    });\r\n  }\r\n  deleteUser(id) {\r\n    dataService.deleteUser({ id }).then(res => {\r\n      if (res) {\r\n        this.getUsers();\r\n        this.setState({\r\n          message: \"data is delete successfully\"\r\n        });\r\n      }\r\n      console.log(\"deleteUser\", res);\r\n    });\r\n  }\r\n  handleSubmit() {\r\n    const user = {\r\n      user_name: this.state.name,\r\n      user_email: this.state.email,\r\n      user_passsword: this.state.password,\r\n      user_role: this.state.role,\r\n      organization_id: Number(this.state.organization)\r\n    };\r\n\r\n    dataService.createUser(user).then(res => {\r\n      this.getUsers();\r\n      this.setState({ login: true });\r\n    });\r\n  }\r\n\r\n  handleChange(name, e) {\r\n    this.setState({ [name]: e.target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-2 offset-sm-8\">\r\n            <button\r\n              style={{ padding: \"0.375rem 0.5rem\" }}\r\n              className=\"btn btn-success btn-block\"\r\n            >\r\n              <Link\r\n                to=\"/organization\"\r\n                style={{ color: \"white\", textDecoration: \"none\" }}\r\n              >\r\n                Manage Organization\r\n              </Link>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-success btn-block\"\r\n              onClick={this.handleOpenDialog}\r\n            >\r\n              Add\r\n            </button>\r\n            <Dialog open={this.state.openDialog}>\r\n              <DialogContent>\r\n                <form>\r\n                  <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Name\"\r\n                      required=\"true\"\r\n                      onChange={e => this.handleChange(\"name\", e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      onChange={e => this.handleChange(\"email\", e)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Password\"\r\n                      onChange={e => this.handleChange(\"password\", e)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Role</label>\r\n                    <select\r\n                      defaultValue=\"user\"\r\n                      className=\"form-control\"\r\n                      onChange={e => this.handleChange(\"role\", e)}\r\n                    >\r\n                      <option>Select Roles</option>\r\n                      <option>User</option>\r\n                      <option>Admin</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Organization Name</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      onChange={e => this.handleChange(\"organization\", e)}\r\n                    >\r\n                      <option>Select Organization</option>\r\n                      {this.state.allOrganization.map((org, index) => {\r\n                        return (\r\n                          <option value={org.organization_id}>\r\n                            {org.organization_name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                </form>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                {!this.state.login && (\r\n                  <Button type=\"button\" onClick={() => this.handleSubmit()}>\r\n                    Submit\r\n                  </Button>\r\n                )}\r\n                <Button type=\"button\" onClick={this.handleCloseDialog}>\r\n                  Cancel\r\n                </Button>\r\n              </DialogActions>\r\n              {this.state.login && <p>Form successfully submitted</p>}\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-sm-8 offset-sm-2\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Password</th>\r\n                  <th>Email</th>\r\n                  <th>role</th>\r\n                  <th>organization</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.data.map((data, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{data.user_name}</td>\r\n                      <td>{data.user_passsword}</td>\r\n                      <td>{data.user_email}</td>\r\n                      <td>{data.user_role}</td>\r\n                      <td>{data.Organization.organization_name}</td>\r\n                      <td>\r\n                        <button onClick={() => this.deleteUser(data.user_id)}>\r\n                          {\" \"}\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { Switch, Route, BrowserRouter, Router } from \"react-router-dom\";\r\nimport LandingPage from \"./Landingpage\";\r\nimport organization from \"./organization\";\r\nimport manage from \"./manage\";\r\nimport standard from \"./standard\";\r\nimport user from \"./user\";\r\n\r\nconst Main = props => {\r\n  return (\r\n    <Router history={props.history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route path=\"/organization\" component={organization} />\r\n        <Route path=\"/manage\" component={manage} />\r\n        <Route path=\"/standard\" component={standard} />\r\n        <Route path=\"/user\" component={user} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getToken, removeItems } from \"../src/utils/userdata\";\nimport \"./App.css\";\nimport \"./css/style.css\";\nimport {\n  Layout,\n  Header,\n  Drawer,\n  Content,\n  Textfield,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent\n} from \"react-mdl\";\nimport Main from \"./components/main\";\nimport { Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { setToken, setUserProfile } from \"./utils/userdata\";\nimport * as dataService from \"./services/dataService\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      login: getToken() ? false : true,\n      errorMessage: \"\"\n    };\n    this.handleOpenDialog = this.handleOpenDialog.bind(this);\n    this.handleCloseDialog = this.handleCloseDialog.bind(this);\n    this.handleLogOut = this.handleLogOut.bind(this);\n  }\n  // handleLogin () {\n  //   this.setState({\n\n  //   })\n  // }\n  handleOpenDialog() {\n    this.setState({\n      openDialog: true\n    });\n  }\n\n  handleCloseDialog() {\n    this.setState({\n      openDialog: false\n    });\n  }\n  // email change handler\n  emailChangeHandler = event => {\n    this.setState({\n      email: event.target.value\n    });\n  };\n  handleLogOut() {\n    removeItems();\n    this.setState({\n      login: true\n    });\n    this.props.history.push(\"/\");\n  }\n  // passwordChangeHandler\n  passwordChangeHandler = event => {\n    this.setState({\n      password: event.target.value\n    });\n  };\n  loginHandler = event => {\n    event.preventDefault();\n    const email = this.state.email;\n    const password = this.state.password;\n\n    dataService\n      .login({ email, password })\n      .then(response => response.json())\n      .then(response => {\n        if (response && response.userProfile && response.userProfile.userRole) {\n          setToken({ token: response.token });\n          setUserProfile({ userProfile: response.userProfile });\n          this.setState({ openDialog: false });\n          this.setState({ login: false });\n          if (response.userProfile.userRole === \"Admin\") {\n            this.props.history.push(\"/manage\");\n          } else {\n            this.props.history.push(\"/standard\");\n          }\n        } else {\n          this.setState({\n            errorMessage: \"incorrect email and password\"\n          });\n        }\n      });\n  };\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header className=\"header-style\" title=\"Helping Desk\" scroll>\n            {this.state.login ? (\n              <Button\n                className=\"top-p\"\n                colored\n                onClick={this.handleOpenDialog}\n                raised\n                ripple\n              >\n                Login\n              </Button>\n            ) : (\n              <Button\n                className=\"top-p\"\n                colored\n                onClick={this.handleLogOut}\n                raised\n                ripple\n              >\n                LogOut\n              </Button>\n            )}\n            <form onSubmit={this.loginHandler} method=\"post\">\n              <Dialog open={this.state.openDialog}>\n                <DialogTitle>Login Here</DialogTitle>\n                <DialogContent>\n                  <Textfield\n                    value={this.state.email}\n                    onChange={this.emailChangeHandler}\n                    label=\"Username\"\n                    style={{ width: \"200px\" }}\n                  />\n                  <Textfield\n                    value={this.state.password}\n                    onChange={this.passwordChangeHandler}\n                    label=\"password\"\n                    style={{ width: \"200px\" }}\n                  />\n                </DialogContent>\n\n                <DialogActions>\n                  <Button type=\"submit\" onClick={this.loginHandler}>\n                    login\n                  </Button>\n                  <Button type=\"button\" onClick={this.handleCloseDialog}>\n                    Cancel\n                  </Button>\n                </DialogActions>\n                {this.state.errorMessage}\n              </Dialog>\n            </form>\n          </Header>\n\n          <Content>\n            <div className=\"page-content\" />\n            <Main history={this.props.history} />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nReactDOM.render(\n  <BrowserRouter>\n    <App history={history} />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}